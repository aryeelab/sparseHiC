% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hicpro.R
\docType{methods}
\name{sparseCompress.HiCPro}
\alias{sparseCompress.HiCPro}
\alias{sparseCompress.HiCPro,ANY-method}
\title{Compress Hi-C Pro output data}
\usage{
sparseCompress.HiCPro(matrix.file, bed.file, res, n = 40, out.pre = NA,
  genomeBuild = NA, drop.chrom = c("chrY", "chrM"), list = TRUE,
  save = FALSE, compress = FALSE, dir.create = FALSE, manual.chr = NA,
  manual.dist = NA, BPPARAM = bpparam())

\S4method{sparseCompress.HiCPro}{ANY}(matrix.file, bed.file, res, n = 40,
  out.pre = NA, genomeBuild = NA, drop.chrom = c("chrY", "chrM"),
  list = TRUE, save = FALSE, compress = FALSE, dir.create = FALSE,
  manual.chr = NA, manual.dist = NA, BPPARAM = bpparam())
}
\arguments{
\item{matrix.file}{Path to .matrix file from Hi-C Pro Output}

\item{bed.file}{Path to .bed file from Hi-C Pro Output}

\item{res}{Character of the resolution of the Hi-C output}

\item{n}{Number of off-diagonal rows to retain features to retain. 
If n = 0, retain the full data.}

\item{out.pre}{= NA}

\item{genomeBuild}{= NA}

\item{drop.chrom}{= c("chrY", "chrM")}

\item{list}{= TRUE}

\item{save}{= FALSE}

\item{compress}{if dir.create is TRUE, compresses the directory (to .tgz) and removes
the raw data.}

\item{dir.create}{If list is FALSE and save is TRUE}

\item{manual.chr}{= NA}

\item{manual.dist}{= NA}

\item{BPPARAM}{= bpparam()}
}
\value{
Either .rds files szved on the local disk or a list of sparse matrices
}
\description{
\code{sparseCompress.HiCPro} takes output data from HiC-Pro and compresses
it. Only intrachromosomal interactions will be preserved.
}
\details{
There are two main modes that can be indicated by the save logic variable.
If save = FALSE, this function will return a list of sparse matrices where
the names of the matrices correspond to the chromosomes. If save = TRUE,
one (if list = TRUE) or many (list = FALSE) .rds files will be created
of the compressed Hi-C interactions in sparse matrices.
}
\examples{
rda <- paste(system.file("rda", package = "diffloop"), "loops.small.rda", sep = "/")

}

